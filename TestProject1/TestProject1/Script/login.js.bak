var utilsfunction = require("utilsfunction");

function login(loginUserName, loginPassword) {
    let indel = Project.Variables.indel;
    
    if(!utilsfunction.checkParamNull(loginUserName, loginPassword)) {
        Log.Error(`Please input valid loginUserName=${loginUserName} or loginPassword=${loginPassword}`);
        //Runner.Stop(true) do not pass globle param (like indel), after cases all fail
        Runner.Stop(true);
    }
    
    __inputFields(indel.logonClass, loginUserName, loginPassword);
  
    if (indel.login_logged_popup.Exists) {
        indel.login_logged_popup.qt_msgbox_buttonbox.buttonOk.ClickButton();
        utilsfunction.delay(60000);
        __inputFields(indel.logonClass, loginUserName, loginPassword);
    }
  
    if (indel.login_nonnormal_popup.Exists) {
        indel.login_nonnormal_popup.qt_msgbox_buttonbox.buttonYes.ClickButton();
    }

    
    if (indel.login_data_save_popup.Exists) {
        indel.login_data_save_popup.qt_msgbox_buttonbox.buttonNo.ClickButton();
    }
    
    //Abort
    if (indel.ReloadClass.Exists) {
        indel.ReloadClass.pushButton_3.ClickButton();
    }

    aqObject.CheckProperty(indel.PatientManagementWidget.groupBox.frame.groupBox_3.label_UserName, "QtText", cmpEqual, "User Name: " + loginUserName);
}

function __inputFields(login, loginUserName, loginPassword) {
  login.lineEdit_Username.Click();
  login.lineEdit_Username.Keys(loginUserName);
  login.lineEdit_Password.Click();
  login.lineEdit_Password.Keys(loginPassword);
  login.pushButton.ClickButton();
}

module.exports.login = login;